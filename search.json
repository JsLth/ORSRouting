[{"path":"https://jslth.github.io/rors/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 rors authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jslth.github.io/rors/articles/ors-installation.html","id":"why-do-the-routing-functions-not-work-off-the-shelf","dir":"Articles","previous_headings":"","what":"Why do the routing functions not work off the shelf?","title":"Installing and setting up OpenRouteService locally","text":"rors powered OpenRouteService (ORS) depends running ORS instance. mount working ORS instance first, routing functions throw error. OpenRouteService instance server can communicated using specified REST API. can public API kind remote server runs ORS self-built ORS local host Instances controlled ors_instance functions ORS setup function family. resulting ors_instance object automatically attached session detected routing functions package. interest setting local instance just want make quick routing requests, can grab free API key official website chuck ORS_TOKEN environment variable. best practice without exposing token R code, e.g. .Renviron file. , can call ors_instance attach token session.   , functions ready use. Keep mind though, public API comes caveats: restricted rate limit 40 requests per minute 2000 requests per day. rors automatically throttles requests public API queries inevitably slow larger analyses. remote service handles potentially sensitive address data. data privacy concern, online services usually option. runs relatively strict configuration severely limits amount data ways process data. example, requests isochrone endpoint allowed contain maximum five locations:  Therefore, plan working larger datasets, limited server-side restrictions public API, ’re handling sensitive data, strongly suggested set local instance. vignette cover usage ors_instance family construct start customized ORS instance using R.","code":"# `server = \"pub\"` is short for https://api.openrouteservice.org/ public <- ors_instance(server = \"pub\") public public$token ors_accessibility(pharma)"},{"path":"https://jslth.github.io/rors/articles/ors-installation.html","id":"setting-up-the-service-backend","dir":"Articles","previous_headings":"","what":"Setting up the service backend","title":"Installing and setting up OpenRouteService locally","text":"order set ORS backend locally, need three things: Docker OpenStreetMap extract desired region compose file telling Docker set ORS , Docker needs installed beforehand. ors_instance can verify installation start Docker, assist installation process. can get Docker . Local ORS instances use Docker containers host service endpoints local server. OpenStreetMap (OSM) extracts regional data files OSM project. contains spatial information relevant routing streets, buildings natural features. OSM extracts distributed providers Geofabrik bbbike. rors wraps osmextract package match, download, process extract files. Finally, compose file file instructs Docker create container. ors_instance function helps adjust file, e.g. change allocated memory ports. can initialize local ORS instance passing directory ors_instance. function creates sub-directory reserved ORS downloads compose file official ORS Github repository. proceeds “jumpstart” ORS, .e. starts default instance default configurations OSM data Heidelberg, Germany. probably want, worry , can make changes setup afterwards. Jumpstarting deemed good practice ORS developer team simplifies rest setup.  Immediately , can take service make changes ORS setup:  resulting ors_instance object stored cache environment entire R session. API functions automatically detect currently mounted instance.  instance object already shows important information printed. dealing local instance localhost. instance “active” currently mounted session “init” already built first time. ors R6 object provides multiple methods set custom ORS instance. methods can divided four categories: Extract: Methods fields interact OSM extracts Config: Methods fields interact configuration Settings: Methods fields interact compose file Docker: Methods fields interact Docker","code":"ors <- ors_instance(dir = \".\", version = \"7c77ae5\", prompts = FALSE) ors$down() get_instance()"},{"path":"https://jslth.github.io/rors/articles/ors-installation.html","id":"changing-the-extract","dir":"Articles","previous_headings":"Setting up the service backend","what":"Changing the extract","title":"Installing and setting up OpenRouteService locally","text":"wanted learn currently selected OSM extract, can run:  can see, currently running default OSM file. wanted get new extract, can run:  code runs osmextract::oe_match osmextract::oe_download download extract British county Rutland. extract automatically added compose file, don’t need anything else.","code":"ors$extract ors$set_extract(\"Rutland\", provider = \"geofabrik\")"},{"path":"https://jslth.github.io/rors/articles/ors-installation.html","id":"changing-the-configuration","dir":"Articles","previous_headings":"Setting up the service backend","what":"Changing the configuration","title":"Installing and setting up OpenRouteService locally","text":"ORS creates ors-config.yml file inside ORS directory holds configuration service. ever used ORS , chances encountered errors told server-side limits. config file place limits defined can change setup. configuration especially includes active routing profiles, profile-specific options endpoint-specific options. Routing profiles transport modes used routing . default driving-car, several profiles can choose (refer API playground). can learn currently active routing profiles:  can see, currently one active profile: driving-car. add profiles, can use $add_profiles method. method accepts either character values objects class ors_profile - combination . quickly adding new profile, can simply refer name.  However, routing profile comes set configurations. better control configurations profile, can create ors_profile objects. following code creates walking profile defaults , without taking account elevation routing computations.  remove profile, can refer name:  Besides routing profiles, can also change configuration entire endpoints. Endpoints include directions, isochrones matrix. endpoint comes limitations. example, default can create isochrones 2 locations. increase limit, can run:  full list endpoint defaults set ORS can found endpoint reference. full list profiles specific configuration defaults can found profile reference.","code":"ors$config ors$add_profiles(\"walking\", ors_profile(\"hiking\")) ors_profile(\"walking\", elevation = FALSE) ors$rm_profiles(\"hiking\") ors$set_endpoints(isochrone = list(maximum_locations = 100))"},{"path":"https://jslth.github.io/rors/articles/ors-installation.html","id":"changing-the-compose-file","dir":"Articles","previous_headings":"Setting up the service backend","what":"Changing the compose file","title":"Installing and setting up OpenRouteService locally","text":"final step starting setup check container settings aka docker-compose.yml file. can check current status compose file printing:  default, ORS uses 1 GB initial memory 2 GB maximum memory. means Docker starts allocating 1 GB memory, allowed allocate maximum 2 GB. can adjust defaults needs using $set_ram. Usually, ORS requires 2.5 times size extract file routing profile memory. can either set memory manually let $set_ram make educated guess:    Similarly, passing anything compose methods, makes freestyle. $set_name() creates random container name $set_port() assigns random port.","code":"ors$compose # Not passing anything tells `$set_ram` to freestyle ors$set_ram() # Alternatively, pass values directly (as GB) ors$set_ram(init = 0.1, max = 0.2) ors$compose$memory ors$set_name() ors$compose$name ors$set_port() ors$compose$ports"},{"path":"https://jslth.github.io/rors/articles/ors-installation.html","id":"docker","dir":"Articles","previous_headings":"Setting up the service backend","what":"Docker","title":"Installing and setting up OpenRouteService locally","text":"final step ORS setup start Docker container , ultimately, service. Docker container can controlled purpose-tailored high-level Docker interface understands following commands: Build start container ($() / docker-compose -d) Take container ($() / docker-compose ) Start container ($start() / docker-compose start) Stop container ($stop() / docker-compose stop) Show logs ($show_logs() / docker logs) service can started using $() method:  default, $() blocks console setup done gives visual audible notification upon completion. setup fails, $() immediately invokes informative error. useful short moderately long setup times. However, especially longer setups, can obtrusive. passing wait = FALSE, entire setup happens background process can keep using console. two tools enable monitor setup progress nonetheless: $show_logs(): Prints ORS logs console. setup fail, first place look errors. fact, $(wait = TRUE) also uses Docker logs determine errors setup. $is_ready(): Shows whether setup done ORS ready use. accesses health endpoint determine whether setup completed without errors. $is_ready() simple wrapper around ors_ready() polls currently mounted ORS instance. ors_ready() returns TRUE, officially ready use rest package functions!","code":"ors$up()"},{"path":"https://jslth.github.io/rors/articles/ors-installation.html","id":"manual-changes","dir":"Articles","previous_headings":"","what":"Manual changes","title":"Installing and setting up OpenRouteService locally","text":"methods ORS instance object cover settings configurations. Many functionalities deliberately left keep number methods neat tidy. missing important feature, feel free open Github issue. Yet, can always make manual changes . methods introduced merely convenience wrappers take care tedious tasks. Parsed versions ors-config.yml docker-compose.yml readily accessible instance object:   objects lists, can simply modified: One caveat simple assignments change state object, state actual files. synchronize ORS file system, $update() making manual changes: command writes current state parsed ORS files disk. Conversely, make manual changes one relevant ORS files, can update R instance object using: command re-parses ORS files. , advisable make majority changes using convenience wrappers automatically update mount instance object. Manually updating instance prone errors can quite hard spot debug.","code":"ors$config$parsed ors$compose$parsed ors$compose$parsed$services$`ors-app`$container_name <- \"new-name-123\" ors$update() ors$update(\"self\")"},{"path":"https://jslth.github.io/rors/articles/ors-installation.html","id":"other-methods","dir":"Articles","previous_headings":"","what":"Other methods","title":"Installing and setting up OpenRouteService locally","text":"ORS instance objects contain important functions didn’t make vignette. Among : $is_built() / $is_running(): Check whether container built running. two steps service ready useful monitor container service ready. $is_mounted(): Checks whether instance currently mounted session. case, simply invoke one methods (e.g. $update()) mount . $get_image() / $get_container() Return useful diagnostics image container. $get_status(): Returns configurations attributes ORS service (given service ready). $purge(): Purges ORS instance, .e. takes containers, deletes ORS directory cleans instance object. $rm_extract(): Removes one several extracts ORS directory. $report(): Prints situation report ORS instance object.","code":""},{"path":"https://jslth.github.io/rors/articles/ors-installation.html","id":"fin","dir":"Articles","previous_headings":"","what":"Fin","title":"Installing and setting up OpenRouteService locally","text":"finalize ORS instance, can run ors$purge(). Purging instance takes running container, (optionally) deletes image, unlinks created sub-directory cleans ORS object. ORS instances also register finalizer automatically purges ORS instance just garbage collection unbinded using rm(ors).","code":"ors$purge()"},{"path":"https://jslth.github.io/rors/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lieth Jonas. Author, maintainer.","code":""},{"path":"https://jslth.github.io/rors/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jonas L (2024). rors: Routing using OpenRouteService. R package version 0.12.8, https://jslth.github.io/rors/, https://github.com/JsLth/rors.","code":"@Manual{,   title = {rors: Routing using OpenRouteService},   author = {Lieth Jonas},   year = {2024},   note = {R package version 0.12.8, https://jslth.github.io/rors/},   url = {https://github.com/JsLth/rors}, }"},{"path":"https://jslth.github.io/rors/index.html","id":"rors","dir":"","previous_headings":"","what":"Routing using OpenRouteService","title":"Routing using OpenRouteService","text":"purpose rors provide tidy, pipeable comprehensive R interface local remote OpenRouteService (ORS) instances. rors currently enables analyses based available endpoints: Qualitative quantitative routing computations Distance matrices Accessibility analyses Street snapping Graph network export Functions designed pipeable, API calls performed gracefully results tidied digestible (sf) tibbles. Another important feature rors setup management local OpenRouteService instances scratch. Local instances facilitate computationally intensive data analyses allow definition custom API configurations. possible use rors official web API, requests slow due rate restrictions therefore really suitable larger scale analyses.","code":""},{"path":"https://jslth.github.io/rors/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Routing using OpenRouteService","text":"can install development version rors GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jslth/rors\")"},{"path":"https://jslth.github.io/rors/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Routing using OpenRouteService","text":"connect running OpenRouteService server - build new one, use workhorse function ors_instance: ORS instance attached session automatically detected functions. perform simple routing request, run ors_inspect:","code":"library(rors) #> © openrouteservice.org by HeiGIT | Data © OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright library(sf) #> Linking to GEOS 3.11.2, GDAL 3.7.2, PROJ 9.3.0; sf_use_s2() is TRUE  # API keys are stored in the ORS_TOKEN environment variable ors <- ors_instance(server = \"public\") ors_inspect(pharma, profile = \"driving-car\", level = \"segment\") #> Simple feature collection with 7 features and 5 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: -0.730349 ymin: 52.5876 xmax: -0.467708 ymax: 52.6747 #> Geodetic CRS:  WGS 84 #> # A tibble: 7 × 6 #>   name            distance duration avgspeed elevation                  geometry #> * <chr>                [m]      [s]   [km/h]       [m]     <MULTILINESTRING [°]> #> 1 Uppingham Road…   9983.     618.      69.8     121.  ((-0.722324 52.58762, -0… #> 2 High Street, B…     26.3      2.4     39.4     111.  ((-0.727928 52.66962, -0… #> 3 Uppingham Road…  10059.     628.      68.8     120.  ((-0.728317 52.66962, -0… #> 4 Uppingham Road…  10642.     676.      69.8     123.  ((-0.721097 52.58816, -0… #> 5 Stamford Road,…  19188.    1137.      66.0      77.9 ((-0.730349 52.66991, -0… #> 6 St Mary's Stre…    358.      61.9     25.0      32.5 ((-0.478222 52.65071, -0… #> 7 St George's St…   1094.     140.      27.7      38.9 ((-0.477902 52.65231, -0…"},{"path":"https://jslth.github.io/rors/index.html","id":"local-instances","dir":"","previous_headings":"","what":"Local instances","title":"Routing using OpenRouteService","text":"rors can work public API requests, primarily designed used together local instances. ors_instance family can used manage, control build local ORS instances. following code jumpstart initial instance, add OSM extract Rutland, add three routing profiles, set random port, 100 MB RAM finally start ORS instance. details, refer vignette(\"ors-installation\").","code":"ors <- ors_instance(dir = \"~\")$   set_extract(\"Rutland\", provider = \"geofabrik\")$   add_profiles(\"car\", \"bike-regular\", \"walking\")$   set_port()$   set_ram(0.1)$   up()"},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"ORS instance — ORSInstance","title":"ORS instance — ORSInstance","text":"R6 class foundation R6 classes ORSLocal ORSRemote initialized. defines methods check status information remote ORS server mount R session.","code":""},{"path":[]},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ORS instance — ORSInstance","text":"ORSInstance$is_ready() ORSInstance$get_status() ORSInstance$is_mounted() ORSInstance$clone()","code":""},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"method-is-ready-","dir":"Reference","previous_headings":"","what":"Method is_ready()","title":"ORS instance — ORSInstance","text":"Checks ORS ready use. TRUE, routing functions can used.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS instance — ORSInstance","text":"","code":"ORSInstance$is_ready()"},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"method-get-status-","dir":"Reference","previous_headings":"","what":"Method get_status()","title":"ORS instance — ORSInstance","text":"Retrieves information ORS server.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS instance — ORSInstance","text":"","code":"ORSInstance$get_status()"},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"method-is-mounted-","dir":"Reference","previous_headings":"","what":"Method is_mounted()","title":"ORS instance — ORSInstance","text":"Checks whether instance currently mounted session. technically, $is_mounted compares MD5 hashes R6 object currently mounted instance. Hence, instance counts mounted exactly currently mounted instance. instance manually manipulated updated $update() thus considered mounted.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS instance — ORSInstance","text":"","code":"ORSInstance$is_mounted()"},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ORS instance — ORSInstance","text":"objects class cloneable method.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS instance — ORSInstance","text":"","code":"ORSInstance$clone(deep = FALSE)"},{"path":"https://jslth.github.io/rors/reference/ORSInstance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS instance — ORSInstance","text":"deep Whether make deep clone.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":null,"dir":"Reference","previous_headings":"","what":"ORS local instance — ORSLocal","title":"ORS local instance — ORSLocal","text":"Creates new ORS instance object. R6 class typically constructed ors_instance. technical details setup local ORS instances, refer official ORS reference. details use ORSLocal objects, refer installation vignette:","code":"vignette(\"ors-installation\", package = \"rors\")"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ORS local instance — ORSLocal","text":"ORSLocal defines methods four steps ORS setup: Extract: Download extract set graph building. Compose: Change docker settings control service set . Configuration: Change way ORS computes routes. Docker: Send commands docker control ORS container.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"docker-commands","dir":"Reference","previous_headings":"","what":"Docker commands","title":"ORS local instance — ORSLocal","text":"Local ORS instances built using Docker containers. Initializing ORSLocal downloads docker-compose.yml file tells Docker build ORS container. Docker backend pulled Docker image (see Dockerhub). rors communicates Docker within R setup manage ORS containers. Unix systems, Docker requires superuser permissions. Unix shells, problematic. However, R communicate Docker without explicitly granted superuser permissions least permissions access Docker. Thus, ORSLocal checks current user superuser current user access Docker group. , aborts. details manage Docker non-root user Linux, refer Docker documentation. Note procedure grants root-level privileges user can negatively impact system's security.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"jumpstarting","dir":"Reference","previous_headings":"","what":"Jumpstarting","title":"ORS local instance — ORSLocal","text":"first initializing ORSLocal first creating new directory, ORSLocal ask like perform jumpstart. Jumpstarting means creating initial Docker build runs default settings, config extract file Heidelberg, Germany. initial build, Docker also creates file system ORS instances including configuration file. Irrespective choice jumpstart, Docker allows one routing profile automatically uses default extract Heidelberg initial run. jumpstarting, ORSLocal takes initial build, subsequent builds run flawlessly without need manually create file system. deemed good practice ORS developer team (refer ORS reference details). Conversely, choose jumpstart (dry = TRUE), ORSLocal interact Docker explicitly told . configuration extract files well rest file system exist yet. can manually jumpstart calling $(). Initializing dry instance can useful need make changes compose file building ORS first time.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"manual-changes","dir":"Reference","previous_headings":"","what":"Manual changes","title":"ORS local instance — ORSLocal","text":"ORSLocal provides range convenience methods change setup ORS instance. methods automatically read write changes disk. also possible make direct changes (parsed) configuration compose files. case, reading writing also need done manually. write changes disk, run $update(), e.g.: read changes done manually files disk, run $update(\"self\").","code":"ors$compose$parsed$services$`ors-app`$container_name <- \"new-name-123\"  ors$update()"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ORS local instance — ORSLocal","text":"rors::ORSInstance -> ORSLocal","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ORS local instance — ORSLocal","text":"paths List relevant file paths ORS setup. Includes top directory, compose file, config file extract file. version Version local ORS backend compose Information compose file (docker-compose.yml). compose file holds various settings Docker setup. important settings included field: ports: 2×2 matrix Docker ports name: Name Docker container memory: List memory information total free system memory well initial max memory allocated Docker instance. image: Version ORS image. \"latest\" refers latest stable version. \"nightly\" refers devel version. parsed: Parsed compose file. making changes object, make sure run $update() apply changes. details, refer official reference. config Information configuration file (ors-config.yml). config file holds various options ORS instance. field gives details : profiles: named vector active routing profiles parsed: Parsed configuration file. making changes obhect, make sure run $update() apply changes. details, refer ORS reference. extract Information extract file. Contains name size selected extract file.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ORS local instance — ORSLocal","text":"rors::ORSInstance$get_status() rors::ORSInstance$is_mounted() rors::ORSInstance$is_ready()","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ORS local instance — ORSLocal","text":"ORSLocal$new() ORSLocal$update() ORSLocal$purge() ORSLocal$finalize() ORSLocal$report() ORSLocal$set_extract() ORSLocal$rm_extract() ORSLocal$set_name() ORSLocal$set_port() ORSLocal$set_ram() ORSLocal$set_graphbuilding() ORSLocal$set_image() ORSLocal$add_profiles() ORSLocal$rm_profiles() ORSLocal$set_endpoints() ORSLocal$() ORSLocal$() ORSLocal$start() ORSLocal$stop() ORSLocal$get_image() ORSLocal$get_container() ORSLocal$show_logs() ORSLocal$is_built() ORSLocal$is_running() ORSLocal$clone()","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ORS local instance — ORSLocal","text":"Initialize ORSInstance object.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$new(   dir = \".\",   version = \"7.2.0\",   overwrite = FALSE,   dry = FALSE,   verbose = TRUE,   prompts = interactive() )"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"dir [character] Custom OpenRouteService directory. specified, directory downloaded system's home directory. directory called \"openrouteservice-{version}\" present, download skipped. Ignored server NULL. version [character] OpenRouteService version use. Can either version number (e.g. 7.2.0) \"master\". Ignored server NULL. overwrite [logical] Whether overwrite current OpenRouteService directory exists. dry [logical] Whether start dry run, .e. run instance without jumpstarting. verbose [logical] Level verbosity. TRUE, shows informative warnings messages, spinners, progress bars system notifications. prompts [logical] Whether ask permission throughout setup. Defaults TRUE interactive sessions.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"ORS local instance — ORSLocal","text":"Updates ORS instance. Use apply changes made either file system ors_instance object . method automatically called using method ors_instance changes ORS setup.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$update(what = c(\"fs\", \"self\"))"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"[character] Whether change file system changes R update instance object changes file system. = \"self\", parses relevant files ORS directory updates ors_instance object. = \"fs\", updates compose file config file based changes made ors_instance object.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-purge-","dir":"Reference","previous_headings":"","what":"Method purge()","title":"ORS local instance — ORSLocal","text":"Purge ORS instance, .e. take container, (optionally) delete image, delete ORS directory, clean R6 class. method can useful testing writing reproducible examples can easily used together .exit.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$purge(image = FALSE)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"image [logical] Whether remove docker image keep projects. default FALSE prevent accidentally breaking projects.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"ORS local instance — ORSLocal","text":"Finalize purge ORS instance. Alias $purge() automatically executes garbage collection.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$finalize()"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-report-","dir":"Reference","previous_headings":"","what":"Method report()","title":"ORS local instance — ORSLocal","text":"Prints situation report ORS instance. Invokes relevant print methods summarize current state instance object.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$report()"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-set-extract-","dir":"Reference","previous_headings":"","what":"Method set_extract()","title":"ORS local instance — ORSLocal","text":"Download set OpenStreetMap extract use ORS. Wrapper oe_get().","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$set_extract(   place,   provider = \"geofabrik\",   timeout = 1800,   file = NULL,   do_use = TRUE,   ... )"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"place [various] Place name, sf/sfc/bbox object bounding box download extract file. details, refer oe_match(). provider [character/NULL] Extract provider download extract . Available providers can found running oe_providers(). NULL, tries providers. timeout [numeric] Timeout extract downloads. Defaults 30 minutes enable longer extract downloads. adopted timeout maximum argument getOption(\"timeout\"). file [character/NULL] Path local OSM extract. Can either full path OSM file filename OSM file data folder ORS. file specified, place provider ignored. do_use [logical] TRUE, enables graph building new extract. FALSE, change compose file . ... arguments passed oe_get().","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-rm-extract-","dir":"Reference","previous_headings":"","what":"Method rm_extract()","title":"ORS local instance — ORSLocal","text":"Removes extract files data directory.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$rm_extract(...)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"... File names extract files data directory. files exist removed.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-set-name-","dir":"Reference","previous_headings":"","what":"Method set_name()","title":"ORS local instance — ORSLocal","text":"Set name ORS container.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$set_name(name = NULL)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"name Name ORS container. NULL, generates random name (\"ors-appXXXX\").","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-set-port-","dir":"Reference","previous_headings":"","what":"Method set_port()","title":"ORS local instance — ORSLocal","text":"Set port localhost ORS container.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$set_port(port = NULL)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"port Port use container. NULL, assigns random port using randomPort().","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-set-ram-","dir":"Reference","previous_headings":"","what":"Method set_ram()","title":"ORS local instance — ORSLocal","text":"Set initial max memory ORS container allowed use.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$set_ram(init = NULL, max = NULL)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"init [numeric/NULL] Initial memory. can change memory needed. specified, uses max. NULL, estimates memory. max [numeric/NULL] Maximum memory. container allowed use memory value. specified, uses init. NULL, estimates memory.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-set-graphbuilding-","dir":"Reference","previous_headings":"","what":"Method set_graphbuilding()","title":"ORS local instance — ORSLocal","text":"Graph building specifies whether routing graphs (re-)built. Turning graph building enables new profiles built extract changed significantly increases setup time. Turn changing configuration options alter routing graphs.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$set_graphbuilding(mode)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"mode [logical] Whether turn graph building .","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-set-image-","dir":"Reference","previous_headings":"","what":"Method set_image()","title":"ORS local instance — ORSLocal","text":"Set version ORS Docker image. preferably compatible compose version.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$set_image(version = NULL)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"version [character] Version specification ORS image.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-add-profiles-","dir":"Reference","previous_headings":"","what":"Method add_profiles()","title":"ORS local instance — ORSLocal","text":"Add routing profiles ORS configuration. ORS builds routing graphs active profiles.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$add_profiles(...)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"... Objects class ors_profile character strings. character string passed, interpreted ors_profile(..., template = TRUE).","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-rm-profiles-","dir":"Reference","previous_headings":"","what":"Method rm_profiles()","title":"ORS local instance — ORSLocal","text":"Remove routing profiles ORS configuration.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$rm_profiles(...)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"... Names routing profiles remove. \"default\" removes profile defaults.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-set-endpoints-","dir":"Reference","previous_headings":"","what":"Method set_endpoints()","title":"ORS local instance — ORSLocal","text":"Change endpoint-specific configurations. Specifies options relevant entire API endpoints isochrones.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$set_endpoints(...)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"... [list/NULL] Named arguments containing configuration endpoints. Available endpoits routing, isochrones, matrix, snap. Refer application.yml list defaults.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-up-","dir":"Reference","previous_headings":"","what":"Method up()","title":"ORS local instance — ORSLocal","text":"Create ORS docker container setup ORS backend local host.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$up(wait = TRUE, ...)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"wait logical Whether run spinner show system notification setup completed. FALSE releases console Docker container created. can check service status using $is_ready(). ... Additional flags passed docker command.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"ORS local instance — ORSLocal","text":"exact command run $() : docker compose -p [name] -f [compose file] -d ---build [...] -p flag allows docker run multiple ORS containers keep separate. uses service name defined compose file. found, $() builds underlying OpenRouteService docker image specified version initialization ORSLocal. Usually detach mode (-d), docker returns terminal control back user. default, $() blocks console, checks errors notifies user service setup finished. behavior can suppresed setting wait = FALSE. service status can checked using $is_ready() ors_ready(). Container logs can accessed typing docker logs [name] terminal.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-down-","dir":"Reference","previous_headings":"","what":"Method down()","title":"ORS local instance — ORSLocal","text":"Stop remove ORS docker container. Use want make changes running ORS setup changing extract selected profiles.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$down()"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-start-","dir":"Reference","previous_headings":"","what":"Method start()","title":"ORS local instance — ORSLocal","text":"Start ORS docker container.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$start(wait = TRUE)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"wait logical Whether run spinner show system notification setup completed. FALSE releases console Docker container created. can check service status using $is_ready().","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-stop-","dir":"Reference","previous_headings":"","what":"Method stop()","title":"ORS local instance — ORSLocal","text":"Stop ORS docker container.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$stop()"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-get-image-","dir":"Reference","previous_headings":"","what":"Method get_image()","title":"ORS local instance — ORSLocal","text":"Retrieve technical information docker image used.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$get_image()"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-get-container-","dir":"Reference","previous_headings":"","what":"Method get_container()","title":"ORS local instance — ORSLocal","text":"Retrieve technical information docker container used.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$get_container()"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-show-logs-","dir":"Reference","previous_headings":"","what":"Method show_logs()","title":"ORS local instance — ORSLocal","text":"Show container logs returned docker logs. Useful debugging docker setups.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$show_logs(format = TRUE)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"format [logical] TRUE, includes ANSI colors adds exdents. Otherwise, trims ANSI colors. Disabling formatting increases performance, can useful larger logs.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-is-built-","dir":"Reference","previous_headings":"","what":"Method is_built()","title":"ORS local instance — ORSLocal","text":"Checks ORS container built. can control state using $() $().","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$is_built()"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-is-running-","dir":"Reference","previous_headings":"","what":"Method is_running()","title":"ORS local instance — ORSLocal","text":"Checks ORS container running. can control state using $start() $stop(). Check $is_ready() see ORS setup succeeded.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$is_running()"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ORS local instance — ORSLocal","text":"objects class cloneable method.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS local instance — ORSLocal","text":"","code":"ORSLocal$clone(deep = FALSE)"},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS local instance — ORSLocal","text":"deep Whether make deep clone.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSLocal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ORS local instance — ORSLocal","text":"","code":"if (FALSE) { # Download ORS, start docker and jumpstart a default session ors <- ors_instance(\"~/ex_ors\", version = \"7.2.0\")  # Take down the newly created instance ors$down()  # Set a new extract file ors$set_extract(\"Rutland\")  # Allocate 100 MB of RAM ors$set_ram(0.1)  # Add a routing profile walking <- ors_profile(\"walking\") ors$add_profiles(walking)  # Set random port ors$set_port()  # Change project name ors$set_name(\"example-ors\")  # Set up ORS ors$up()  # Check if ORS container exists and is running ors$is_built() ors$is_running()  # Check if ORS is ready to use ors$is_ready()  # Stop container, e.g. to make configuration changes ors$stop()  # Make changes to the configuration ors$set_endpoints(matrix = list(maximum_routes = 1e+05)) # default is 2500  # Change default profile settings default <- ors_profile(maximum_snapping_radius = -1) ors$add_profiles(default)  # If we make manual changes to the configuration, we need to apply the # changes explicitly ors$config$parsed$ors$engine$profiles$car$elevation <- FALSE ors$update() # writes the current object state to the disk  # If the compose or config files are changed on disk, the object can be # refreshed ors$update(\"self\") # reads the disk state to the R object  # Adding profiles does not work when the container is still built! # Why? Because graphs need to be built for new profiles, so the container # must be down. if (FALSE) {   bike <- ors_profile(\"bike-road\")   ors$add_profiles(bike) # only do this when the container is down!! }  # Additionally, graphs are only re-built if we enable graph building. # When changing the extract, this happens automatically, but we can also # control graph building manually, e.g. for adding new profiles. ors$set_graphbuilding(TRUE)  # Finally, start the container again to run the newly configured service ors$start() }"},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":null,"dir":"Reference","previous_headings":"","what":"ORS remote instance — ORSRemote","title":"ORS remote instance — ORSRemote","text":"Creates new ORS instance object. R6 class typically constructed ors_instance. object represents remote instance, .e. existing server like public API.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ORS remote instance — ORSRemote","text":"rors::ORSInstance -> ORSRemote","code":""},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"ORS remote instance — ORSRemote","text":"url URL ORS server token Information API tokens","code":""},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ORS remote instance — ORSRemote","text":"rors::ORSInstance$get_status() rors::ORSInstance$is_mounted() rors::ORSInstance$is_ready()","code":""},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ORS remote instance — ORSRemote","text":"ORSRemote$new() ORSRemote$clone()","code":""},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ORS remote instance — ORSRemote","text":"Initialize remote ORS instance.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS remote instance — ORSRemote","text":"","code":"ORSRemote$new(server, token = FALSE)"},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS remote instance — ORSRemote","text":"server [character] URL server accepts OpenRouteService requests. can URL local remote server. official public API can accessed using shortcuts \"public\" \"pub\". Keep mind public API rate-restricted requests automatically throttled 40 requests per minute. Routing functions slow larger datasets. token [logical] Whether server requires authorization token. ORS tokens stored ORS_TOKEN environment variable. Defaults FALSE. server public API, token set TRUE.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ORS remote instance — ORSRemote","text":"objects class cloneable method.","code":""},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS remote instance — ORSRemote","text":"","code":"ORSRemote$clone(deep = FALSE)"},{"path":"https://jslth.github.io/rors/reference/ORSRemote.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS remote instance — ORSRemote","text":"deep Whether make deep clone.","code":""},{"path":"https://jslth.github.io/rors/reference/get_closest_pois.html","id":null,"dir":"Reference","previous_headings":"","what":"Group a POI dataset — get_closest_pois","title":"Group a POI dataset — get_closest_pois","text":"Groups dataset containing points interest based proximity source dataset. Proximity can defined physical distance (argument n) /distance buffer (radius).","code":""},{"path":"https://jslth.github.io/rors/reference/get_closest_pois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group a POI dataset — get_closest_pois","text":"","code":"get_closest_pois(src, pois, n = NULL, radius = NULL)"},{"path":"https://jslth.github.io/rors/reference/get_closest_pois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group a POI dataset — get_closest_pois","text":"src [sf/sfc] Source dataset containing point geometries routed . pois [sf] Dataset represents list points interest routed row source dataset n [numeric] Maximum number points interest around point source dataset shall returned. actual number might lower depending rows pois dataset remaining number points radius NULL. NULL, radius must provided. radius [numeric] Maximum distance point interest around point source dataset. returned points interest lie within distance source points. NULL, n must provided.","code":""},{"path":"https://jslth.github.io/rors/reference/get_closest_pois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group a POI dataset — get_closest_pois","text":"Returns pois added .groups column links row row src dataset.","code":""},{"path":"https://jslth.github.io/rors/reference/get_closest_pois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group a POI dataset — get_closest_pois","text":"","code":"if (FALSE) { sample <- ors_sample(20) pois <- get_osm_pois(\"Cologne\", amenity = \"hospital\")  by_points <- get_closest_pois(sample, pois, n = 5) by_buffer <- get_closest_pois(sample, pois, radius = 5000) by_both <- get_closest_pois(sample_pois, n = 5, radius = 5000)}"},{"path":"https://jslth.github.io/rors/reference/get_extract_boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract boundaries — get_extract_boundaries","title":"Extract boundaries — get_extract_boundaries","text":"Returns boundary geometries currently mounted extract. local instances, get_extract_boundaries wraps oe_read. remote instances, see section \"Remote instances\".","code":""},{"path":"https://jslth.github.io/rors/reference/get_extract_boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract boundaries — get_extract_boundaries","text":"","code":"get_extract_boundaries(instance = NULL, force = FALSE, verbose = TRUE, ...)"},{"path":"https://jslth.github.io/rors/reference/get_extract_boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract boundaries — get_extract_boundaries","text":"instance [ors_instance] Object OpenRouteService instance used route computations. recommended use ors_instance set instance globally. argument used activating instance globally feasible. force [logical] TRUE, extract must identified parsed. FALSE, geometries read cache possible. verbose [logical] TRUE, prints loading spinner. ... instance local instance, ignored. Otherwise, specifies arguments generating random bbox including: dist, bbox radius meters, seed, random seed set.seed.","code":""},{"path":"https://jslth.github.io/rors/reference/get_extract_boundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract boundaries — get_extract_boundaries","text":"sfc object currently mounted extract boundaries.","code":""},{"path":"https://jslth.github.io/rors/reference/get_extract_boundaries.html","id":"remote-instances","dir":"Reference","previous_headings":"","what":"Remote instances","title":"Extract boundaries — get_extract_boundaries","text":"instance local, difficult derive extract boundaries. thus far way accessing OSM extract file knowing server address. can, however, make use heuristics: ors_export can export built graphs ORS server allows . However, work public API requires knowledge approximate area extract. ors_guess can make approximation extract area. accesses snap endpoint also work public API needs enabled servers. ors_guess can make lot requests might feasible many situations.","code":""},{"path":"https://jslth.github.io/rors/reference/get_extract_boundaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract boundaries — get_extract_boundaries","text":"","code":"if (FALSE) { # For local instances, reads the extract file bounds <- get_extract_boundaries() plot(bounds)  # Subsequent calls recover from the cache get_extract_boundaries() }"},{"path":"https://jslth.github.io/rors/reference/get_instance.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility functions — get_instance","title":"Utility functions — get_instance","text":"Utility functions aid setup local instances. get_instance checks existence mounted instance current session returns . get_status returns status reported ORS server. ors_ready checks mounted service ready use. get_profiles wrapper around get_status returns active profiles mounted service.","code":""},{"path":"https://jslth.github.io/rors/reference/get_instance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility functions — get_instance","text":"","code":"get_instance()  get_status(id = NULL)  get_profiles(id = NULL, force = TRUE)  ors_ready(id = NULL, force = TRUE, error = FALSE)"},{"path":"https://jslth.github.io/rors/reference/get_instance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility functions — get_instance","text":"id [character] ID name container URL server checked. NULL, retrieves ID current instance set ors_instance force [logical] TRUE, function must query server. FALSE, information read cache possible. error [logical] TRUE, gives error service ready.","code":""},{"path":"https://jslth.github.io/rors/reference/get_instance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility functions — get_instance","text":"get_instance returns object class ors_instance. get_status returns list information running service. ors_ready returns length-1 logical vector specifying service running. get_profiles returns vector containing active profiles.","code":""},{"path":[]},{"path":"https://jslth.github.io/rors/reference/last_ors_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Return ORS conditions — last_ors_conditions","title":"Return ORS conditions — last_ors_conditions","text":"Return error warning messages ORS returned last ors_pairwise function call. Also works ors_shortest_distances.","code":""},{"path":"https://jslth.github.io/rors/reference/last_ors_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return ORS conditions — last_ors_conditions","text":"","code":"last_ors_conditions(last = 1L)"},{"path":"https://jslth.github.io/rors/reference/last_ors_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return ORS conditions — last_ors_conditions","text":"last [integer] Number error lists returned. last = 2L, example, returns errors last two function calls.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_accessibility.html","id":null,"dir":"Reference","previous_headings":"","what":"ORS accessibility maps — ors_accessibility","title":"ORS accessibility maps — ors_accessibility","text":"ors_accessibility returns isochrone isodistance data set source points, either polygons raster.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_accessibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS accessibility maps — ors_accessibility","text":"","code":"ors_accessibility(   src,   profile = get_profiles(),   range = c(200L, 300L),   attributes = \"area\",   intersections = FALSE,   interval = 30L,   location_type = c(\"start\", \"destination\"),   range_type = c(\"time\", \"distance\"),   smoothing = 25L,   area_units = c(\"m\", \"km\", \"mi\"),   units = c(\"m\", \"km\", \"mi\"),   rasterize = FALSE,   raster_resolution = c(100L, 100L),   instance = NULL,   ... )"},{"path":"https://jslth.github.io/rors/reference/ors_accessibility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS accessibility maps — ors_accessibility","text":"src [sf/sfc] Source dataset containing point geometries routed . profile [character] Means transport supported OpenRouteService. Defaults first profile call get_profiles. ors_shortest_distances, profile can character vector, functions needs character scalar. details profiles, refer documentation. range [character] length-1, specifies maximum range can broken using argument interval. length larger 1, specifies manual breaks. unit can controlled using argument range_type. attributes [character] Additional features included output. relevant rasterize = FALSE. Can one \"area\", \"reachfactor\" \"total_pop\". intersections [logical] Wether return overlapping polygons. interval [integer] range length-1 vector, defines distance interval break isochrones. location_type [character] Whether route (\"start\") (\"destination\") points input data. range_type [character] Type distance calculations based . \"time\" produces isochrones \"distance\" produces isodistance polygons. smoothing [integer] Smoothing factor 0 100 applied polygon geometries. details, refer API playground. area_units [character] Distance unit use area attribute attributes. units [character] Units used range argument range_type = \"distance\". rasterize [logical] FALSE, returns isochrone polygon geometries. TRUE, aggregates polygon distance values onto vector grid rasterizes vector grid SpatRaster object. rasterizing, distance value preserved variables specified attributes discarded. raster_resolution [numeric] rasterize = TRUE, specifies resolution template raster. Corresponds number cells direction (x, y). argument passed st_make_grid rast. instance [ors_instance] Object OpenRouteService instance used route computations. recommended use ors_instance set instance globally. argument used activating instance globally feasible. ... Additional arguments passed ORS API. includes options modify routing results. details argument, refer API playground documentation. avoid_borders Length-1 character vector specifying whether avoid, borders, controlled ones none. available driving-*. avoid_countries Numeric vector listing countries avoid. country assigned numeric value. Refer ORS documentation. available driving-*. avoid_features Character vector containing traffic features avoid (e.g. highways tunnels). avoid_polygons sf sfc object describing areas avoid. profile_params Nested list containing restrictions weightings driving-hgv, cycling-*, walking, hiking wheelchair. vehicle_type Length-1 character vector specifying type heavy goods vehicle. Needed set restrictions driving-hgv.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_accessibility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ORS accessibility maps — ors_accessibility","text":"rasterize = FALSE, returns sf object containing isochrone isodistance polygon geometries well additional attributes. polygon's outer lines represent places equal distance travel time respective point source dataset. rasterize = FALSE, returns raster object discrete value classification.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_accessibility.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ORS accessibility maps — ors_accessibility","text":"","code":"if (FALSE) { set.seed(123) src <- ors_sample(10) data(\"pharma\")  # Returns a polygon sf dataframe divided by four 15 minute time breaks # Also contains information on the area and population inside the isochrones ors_accessibility(   source_sf,   profile = \"driving-car\",   range = c(900, 1800, 2700, 3600),   attributes = c(\"area\", \"total_pop\"),   location_type = \"start\",   range_type = \"time\",   rasterize = TRUE )  # Returns a raster image classified by 3 distance intervals ors_accessibility(   source_df,   profile = \"driving-car\",   range = c(1000, 5000, 10000),   location_type = \"destination\",   range_type = \"distance\" )  # Returns a polygon sf dataframe that is broken down every 50 meters up until # the maximum distance of 500 meters. ors_accessibility(   source_df,   profile = \"cycling-regular\",   range = 500,   location_type = \"start\",   interval = 50,   range_type = \"distance\" )}"},{"path":"https://jslth.github.io/rors/reference/ors_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export graphs — ors_export","title":"Export graphs — ors_export","text":"Retrieve base graphs different modes transport. Includes nodes edges used routing.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export graphs — ors_export","text":"","code":"ors_export(   bbox,   profile = get_profiles(),   network = TRUE,   instance = NULL,   ... )"},{"path":"https://jslth.github.io/rors/reference/ors_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export graphs — ors_export","text":"bbox [various] object created st_bbox object can coerced bbox object. graphs within boundaries exported. profile [character] Means transport supported OpenRouteService. Defaults first profile call get_profiles. ors_shortest_distances, profile can character vector, functions needs character scalar. details profiles, refer documentation. network [logical] Whether convert output sfnetwork. instance [ors_instance] Object OpenRouteService instance used route computations. recommended use ors_instance set instance globally. argument used activating instance globally feasible. ... Additional arguments passed export API.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export graphs — ors_export","text":"sfnetworks installed, returns sfnetwork. Otherwise, returns list fields nodes edges. nodes network contains column weight represents fastest routing duration specified profile.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export graphs — ors_export","text":"","code":"if (FALSE) { library(sfnetworks) library(ggplot2)  data(\"pharma\")  # export graphs as sfnetwork exp1 <- ors_export(pharma, network = TRUE) plot(exp1)  # export graphs as list exp2 <- ors_export(pharma, network = FALSE)  ggplot(exp2$edges) +   geom_sf(aes(lwd = weight))  ggplot() +   geom_sf(data = exp2$nodes, size = 1) +   geom_sf(data = exp2$edges)}"},{"path":"https://jslth.github.io/rors/reference/ors_guess.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess extract boundaries — ors_guess","title":"Guess extract boundaries — ors_guess","text":"Makes reasonable guesses boundaries OpenStreetMap extract mounted active ORS instance. ors_guess samples points specified area tries snap points nearest defined street. simple wrapper around ors_snap. function can useful validate ORS setup find extract area remote (non-official) ORS server.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_guess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess extract boundaries — ors_guess","text":"","code":"ors_guess(   poly = NULL,   n = 1000,   radius = 1000,   type = \"regular\",   poly_fun = sf::st_convex_hull,   progress = FALSE,   instance = NULL,   ... )"},{"path":"https://jslth.github.io/rors/reference/ors_guess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess extract boundaries — ors_guess","text":"poly [various] sf/sfc object object can parsed st_bbox. NULL, defaults global boundaries. Needed narrow area guessing. best results, poly small precise possible. n [integer] Number points sample. points mean slower precise guess work. radius [numeric] Snapping radius. Points snapped street street lies within distance source point. type [character] Spatial sampling type. details, see st_sample. poly_fun [function] Function derive boundary polygon successfully snapped points. Defaults st_convex_hull. useful functions st_concave_hull st_polygonize. progress [logical] Whether show progress bar longer operations. instance [ors_instance] Object OpenRouteService instance used route computations. recommended use ors_instance set instance globally. argument used activating instance globally feasible. ... arguments passed poly_fun","code":""},{"path":"https://jslth.github.io/rors/reference/ors_guess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guess extract boundaries — ors_guess","text":"sfc polygon approximately represents boundaries current ORS extract.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_guess.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Guess extract boundaries — ors_guess","text":"ors_guess usually make lot requests. rate-limited, strongly advised usage function.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_guess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guess extract boundaries — ors_guess","text":"","code":"if (FALSE) { bounds <- get_extract_boundaries() bounds <- sf::st_buffer(bounds, 10000) plot(bounds)  bounds2 <- ors_guess(bounds) plot(bounds2, add = TRUE)  bounds3 <- ors_guess(bounds, n = 10000) plot(bounds3, add = TRUE)  bounds4 <- ors_guess(bounds, poly_fun = sf::st_concave_hull, ratio = 0) plot(bounds4, add = TRUE)}"},{"path":"https://jslth.github.io/rors/reference/ors_inspect.html","id":null,"dir":"Reference","previous_headings":"","what":"Route inspection — ors_inspect","title":"Route inspection — ors_inspect","text":"Calls directions service get closer look route characteristics attributes. Produces dataframe containing elaborate perspective route sections contextual properties. ors_inspect can also used relatively low-level interface directions service ability return responses parsed unparsed JSONs. summary function computes summary statistics interval tables given route.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_inspect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Route inspection — ors_inspect","text":"","code":"ors_inspect(   src,   profile = get_profiles(),   level = c(\"waypoint\", \"step\", \"segment\"),   attributes = NULL,   extra_info = NULL,   elevation = TRUE,   navigation = FALSE,   alternative_routes = NULL,   round_trip = NULL,   as = c(\"tidy\", \"list\", \"string\"),   elev_as_z = FALSE,   instance = NULL,   ... )  # S3 method for ors_route summary(object, ...)"},{"path":"https://jslth.github.io/rors/reference/ors_inspect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Route inspection — ors_inspect","text":"src [sf] Source dataset containing least two point geometries routes computed. round_trip specified, source must contain single coordinate pair round trip generated. profile [character] Means transport supported OpenRouteService. Defaults first profile call get_profiles. ors_shortest_distances, profile can character vector, functions needs character scalar. details profiles, refer documentation. level [character] Level route aggregation. Must one waypoint, step segment. See details. attributes [list] List attributes summarize route characteristics. includes three values: avgspeed states average vehicle speed along route, detourfactor indicates much route deviates straight line. percentage shows share segment compared entire route. TRUE, values included. extra_info List keywords add extra information regarding linestring segment output. TRUE, values included. See details information. elevation [logical] TRUE, elevation data included output. navigation [logical] TRUE, navigation information included output, .e., instructions road exits. level == \"segment\", navigation data dropped output. alternative_routes [list] Named list specifies options alternative routes accepts three parameters. target_count maximum number routes compute (including recommended route). Must integer 1 3 defaults 1. output can contain less routes specified alternatives can computed src coordinates. share_factor denotes maximum share identical paths routes. weight_factor maximum factor route can deviate (.e. longer) original route. specified, target_count larger 1, output wrapped list three dataframes. NULL, alternative routes computed. round_trip [list] Named list specifies options round trips accepts three parameters. length approximate length round trip. points denotes number route points derive round trip (higher rounder). seed controls randomisation route direction. specified, src must contain single coordinate pair round trip generated. NULL, round trip computed. [character] format output. \"string\", returns entire JSON response string. \"list\", returns parsed JSON list. \"tidy\", performs lots data preparation shape response tibble. elev_as_z [logical] TRUE, elevation data stored z-values geometry output sf dataframe. FALSE, elevation stored distinct dataframe column. Ignored elevation = FALSE. instance [ors_instance] Object OpenRouteService instance used route computations. recommended use ors_instance set instance globally. argument used activating instance globally feasible. ... Additional arguments passed ORS API. includes options modify routing results. details argument, refer API playground documentation geometry_simplify Whether geometry simplified. Defaults FALSE. continue_straight Whether avoid u-turns continue straight possible. FALSE, allows route take u-turns. Defaults FALSE. avoid_borders Character vector specifying whether avoid, borders, controlled ones none. available driving-*. avoid_countries Numeric vector listing countries avoid. country assigned numeric value. Refer ORS country list. available driving-*. avoid_features Character vector containing traffic features avoid. One several highways, tollways, ferries, fords, steps. avoid_polygons sf sfc object describing areas avoid. restrictions Restrictions applied routing. Routes conform restrictions considered. Can either specifications heavy-goods vehicles (axleload, hazmat, height, length, weight, width), indicators wheelchair accessibility (maximum_incline, maximum_sloped_kerb, minimum_width, smoothness_type, surface_type, track_type), maximum allowed route steepness (gradient). applicable profile. Refer documentation details parameter. weightings Weightings route selection. Can preference multiplicators walking profiles (green, quiet) steepness_difficulty cycling profiles. applicable profile. Refer documentation details parameter. allow_unsuitable Whether possibly unsuitable surfaces included wheelchair routing. TRUE, includes routes, even surface quality might suitable wheelchair driving. Defaults FALSE. surface_quality_known Whether enforce surface quality routes considered. FALSE, routes surface qualities taken account. Defaults FALSE vehicle_type type heavy-goods vehicle assumed profile driving-hgv. One hgv, agricultural, delivery, forestry, goods. Needed set restrictions driving-hgv. Defaults hgv. preference Specifies route preference mode. One recommended, fastest shortest. Defaults recommended. radiuses Maximum distance (m) road segments can snapped . radiuses = -1 represents unlimited radius. Defaults maximum_snapping_radius configuration file (350m changed). maximum_speed Maximum speed routing vehicles allowed drive. applied default. object route object class ors_inspect.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_inspect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Route inspection — ors_inspect","text":"Returns sf dataframe containing detailed sections routes coordinates specified src, aggregated according level aggregation stated level. alternative_routes specified, returns list sf dataframes instead element containing route alternative.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_inspect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Route inspection — ors_inspect","text":"OpenRouteService distinguishes three types route aggregation: Segments, steps waypoints. segment single route src[, ] src[+ 1, ]. step route section relevant navigation system. waypoint straight connection two geographical points route. Depending chosen level aggregation, output adjusted interpolation aggregation. levels \"segment\", ORS attributes stored R attributes included dataframe. \"waypoint\", distances durations derived geometry lengths take account elevation (due restrictions s2 package). Extra information (using extra_info argument) street names perfectly overlap steps segments. cases, value highest overlap adopted causing information loss. Navigation information dropped \"segment\" level. Extra information can requested additional context waypoint route. Possible values include: steepness Ordered factor describing steep part route . suitability Ordinal numeric describing suitable part route (1 - unsuitable; 10 - suitable). surface Unordered factor describing surface material covering part route. waycategory Unordered factor describing special parts route. waytype Unordered factor containing different types roads. tollways driving-* profiles, specifies whether part route tollway. traildifficulty walking driving profiles, specifies OSM trail difficulty. osmid wheelchair profile, contains OSM IDs used ways. roadaccessrestrictions Unordered factor describing road access restriction. countryinfo Nominal numeric containing country codes part route. green walking profiles, describes amount green route (1 - little; 10 - much). noise walking profiles, describes amount noise route (1 - little; 10 - much).","code":""},{"path":[]},{"path":"https://jslth.github.io/rors/reference/ors_inspect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Route inspection — ors_inspect","text":"","code":"if (FALSE) { sample_source <- ors_sample(1) sample_dest <- ors_sample(1) profile <- get_profiles()[1]  # Basic inspection without extra information insp <- ors_inspect(sample_source, sample_dest, profile)  # Advanced inspection with extra information insp_adv <- ors_inspect(   sample_source,   sample_dest,   profile,   extra_info = TRUE )  # Inspection of route elevation data insp_elev <- ors_inspect(   sample_source,   sample_dest,   profile,   elevation = TRUE,   elev_as_z = FALSE )  # Inspection of route summary attributes insp_attr <- ors_inspect(   sample_source,   sample_dest,   profile,   attributes = \"detourfactor\" ) attr(insp_attr, \"detourfactor\")  # Altering the route by passing further arguments insp_opts <- ors_inspect(   sample_source,   sample_dest,   profile,   continue_straight = TRUE,   preference = \"shortest\",   maximum_speed = 80 )  # Summarizing route specifics route_summary <- summary(insp_adv) }"},{"path":"https://jslth.github.io/rors/reference/ors_instance.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenRouteService instance — ors_instance","title":"OpenRouteService instance — ors_instance","text":"Creates OpenRouteService instance object. instance represents either local/remote server directory OpenRouteService can set . Running function related functions listed stores instance internal environment object enables functions like ors_pairwise automatically detect appropriate server information needed make successful request. Hence, function always run loading rors means fixing instance current session. initializing instance using already running server requires action, function family excels building local OpenRouteService server source. Setting local server effectively removes server-side rate limits allows conveniently use package functions much larger datasets. setting local server, required build start Docker container. , ors_instance starts Docker (necessary), downloads unpacks OpenRouteService source code returns object class ors_instance. full reference methods ORS instance, refer ORSLocal ORSRemote.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_instance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenRouteService instance — ors_instance","text":"","code":"ors_instance(   dir = \".\",   server = NULL,   version = \"latest\",   overwrite = FALSE,   verbose = TRUE,   prompts = interactive(),   token = FALSE,   ... )"},{"path":"https://jslth.github.io/rors/reference/ors_instance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenRouteService instance — ors_instance","text":"dir [character] Custom OpenRouteService directory. specified, directory downloaded system's home directory. directory called \"openrouteservice-{version}\" present, download skipped unless overwrite TRUE. Ignored server given. server [character] URL server accepts OpenRouteService requests. can URL local remote server. official public API can accessed using shortcuts \"public\" \"pub\". Keep mind public API rate-restricted requests automatically throttled 40 requests per minute. Routing functions slow larger datasets. version [character] OpenRouteService version use. Can either version number (e.g. 7.2.0), commit hash, version description (\"master\", \"latest\" \"nightly\"). Ignored server NULL. version numeric version version description, compose version image version set. version hash, image version defaults \"nightly\". Ignored server given. overwrite [logical] Whether overwrite current OpenRouteService directory exists. Ignored server given. verbose [logical] Level verbosity. TRUE, shows informative warnings messages, spinners, progress bars system notifications. Ignored server given. prompts [logical] Whether ask permission throughout setup. Defaults TRUE interactive sessions. Ignored server given. token [logical] Whether server requires authorization token. ORS tokens stored ORS_TOKEN environment variable. Defaults FALSE. server public API, token set TRUE. Ignored server NULL.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_instance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenRouteService instance — ors_instance","text":"R6 object class ors_instance created ORSLocal ORSRemote.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_instance.html","id":"session-mounting","dir":"Reference","previous_headings":"","what":"Session mounting","title":"OpenRouteService instance — ors_instance","text":"Upon initialization (whenever calling method) object created ors_instance mounts current R session. ors_* functions automatically identify mounted ORS instance retrieve important information querying ORS servers processing data. Mounted instances cleared starting new session overwriting new instance. case multiple instances running simultaneously queried instance, ors_* functions allow directly pass instance object. Otherwise, recommended implicitly use mounted instance.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_instance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenRouteService instance — ors_instance","text":"","code":"if (FALSE) { dir <- dir.create(\"~/test_ors\")  # Download and furnish an ORS instance ors_instance(dir = dir, version = \"7.2.0\")  # Connect to the public API ors_instance(server = \"public\")  # Connect to a local server ors_instance(server = \"https://127.0.0.1:8001/\") }"},{"path":"https://jslth.github.io/rors/reference/ors_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Routing distance matrix — ors_matrix","title":"Routing distance matrix — ors_matrix","text":"Calls matrix service returns routing distance matrix.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Routing distance matrix — ors_matrix","text":"","code":"ors_matrix(   src,   dst = NULL,   profile = get_profiles(),   units = c(\"m\", \"km\", \"mi\"),   proximity_type = c(\"distance\", \"duration\"),   instance = NULL )"},{"path":"https://jslth.github.io/rors/reference/ors_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Routing distance matrix — ors_matrix","text":"src [sf/sfc] Source dataset containing point geometries routed . dst [sf/sfc] Destination dataset containing point geometries routed . NULL, routes points src. profile [character] Means transport supported OpenRouteService. Defaults first profile call get_profiles. ors_shortest_distances, profile can character vector, functions needs character scalar. details profiles, refer documentation. units [character] Distance unit distance calculations (\"m\", \"km\" \"mi\") proximity_type [character] Type proximity calculations based . distance, shortest physical distance calculated duration, shortest temporal distance calculated. instance [ors_instance] Object OpenRouteService instance used route computations. recommended use ors_instance set instance globally. argument used activating instance globally feasible.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Routing distance matrix — ors_matrix","text":"length(proximity_type) == 1, returns nrow(src) * nrow(dst) routing distance matrix. Otherwise, returns list containing two matrices accordingly.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_pairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Routing distance computations — ors_pairwise","title":"Routing distance computations — ors_pairwise","text":"ors_pairwise calculates routing distance two datasets using Directions service ORS. ors_shortest_distances wrapper around ors_pairwise matches point source dataset dataset points interest destination dataset extracts route shortest distance.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_pairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Routing distance computations — ors_pairwise","text":"","code":"ors_pairwise(   src,   dst,   profile = get_profiles(),   units = c(\"m\", \"km\", \"mi\"),   geometry = FALSE,   instance = NULL,   ... )  ors_shortest_distances(   src,   dst,   group = NULL,   profile = get_profiles(),   units = c(\"m\", \"km\", \"mi\"),   geometry = FALSE,   instance = NULL,   ...,   proximity_type = c(\"duration\", \"distance\"),   progress = TRUE )"},{"path":"https://jslth.github.io/rors/reference/ors_pairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Routing distance computations — ors_pairwise","text":"src [sf/sfc] Source dataset containing point geometries routed . dst [sf/sfc] Destination dataset containing point geometries routed . ors_shortest_distances, destination argument can also dataframe containing grouping column specified group argument indicates destinations refer row source dataset (returned get_closest_pois). recommended large datasets passing plain sf dataframe routes source point point entire destination dataset. profile [character] Means transport supported OpenRouteService. Defaults first profile call get_profiles. ors_shortest_distances, profile can character vector, functions needs character scalar. details profiles, refer documentation. units [character] Distance unit distance calculations (\"m\", \"km\" \"mi\") geometry [logical] TRUE, returns sf object containing route geometries. FALSE, returns route distance measures. Defaults FALSE, increase performance. instance [ors_instance] Object OpenRouteService instance used route computations. recommended use ors_instance set instance globally. argument used activating instance globally feasible. ... Additional arguments passed ORS API. includes options modify routing results. details argument, refer API playground documentation geometry_simplify Whether geometry simplified. Defaults FALSE. continue_straight Whether avoid u-turns continue straight possible. FALSE, allows route take u-turns. Defaults FALSE. avoid_borders Character vector specifying whether avoid, borders, controlled ones none. available driving-*. avoid_countries Numeric vector listing countries avoid. country assigned numeric value. Refer ORS country list. available driving-*. avoid_features Character vector containing traffic features avoid. One several highways, tollways, ferries, fords, steps. avoid_polygons sf sfc object describing areas avoid. restrictions Restrictions applied routing. Routes conform restrictions considered. Can either specifications heavy-goods vehicles (axleload, hazmat, height, length, weight, width), indicators wheelchair accessibility (maximum_incline, maximum_sloped_kerb, minimum_width, smoothness_type, surface_type, track_type), maximum allowed route steepness (gradient). applicable profile. Refer documentation details parameter. weightings Weightings route selection. Can preference multiplicators walking profiles (green, quiet) steepness_difficulty cycling profiles. applicable profile. Refer documentation details parameter. allow_unsuitable Whether possibly unsuitable surfaces included wheelchair routing. TRUE, includes routes, even surface quality might suitable wheelchair driving. Defaults FALSE. surface_quality_known Whether enforce surface quality routes considered. FALSE, routes surface qualities taken account. Defaults FALSE vehicle_type type heavy-goods vehicle assumed profile driving-hgv. One hgv, agricultural, delivery, forestry, goods. Needed set restrictions driving-hgv. Defaults hgv. preference Specifies route preference mode. One recommended, fastest shortest. Defaults recommended. radiuses Maximum distance (m) road segments can snapped . radiuses = -1 represents unlimited radius. Defaults maximum_snapping_radius configuration file (350m changed). maximum_speed Maximum speed routing vehicles allowed drive. applied default. group [character/numeric] Column name index providing grouping column indicates row destination dataset corresponds row source dataset (output get_closest_pois). Providing grouping column can considerably reduce processing load larger datasets. proximity_type [character] Type proximity calculations based . distance, shortest physical distance calculated duration, shortest temporal distance calculated. progress [logical] TRUE, displays progress bar process taking bit longer.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_pairwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Routing distance computations — ors_pairwise","text":"ors_pairwise returns dataframe distances travel durations source destination. ors_shortest_distances returns dataframe containing distances, travel durations index number point interest shortest routing distance respective place source dataset. Depending geometry argument, outputs can either simple dataframes objects class sf containing linestring geometries respective routes.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_pairwise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Routing distance computations — ors_pairwise","text":"ors_pairwise, profile argument supports length-1 vectors ors_shortest_distances supports multiple profiles. ors_shortest_distances finds shortest route source point profile, respectively.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_pairwise.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error handling","title":"Routing distance computations — ors_pairwise","text":"Since ors_pairwise supposed conduct lot calculations one go, errors might occur even well-conceived service setups. order make debugging less painful, errors tear whole process. saved environment issue warning containing indices routes question. process finished, can accessed calling last_ors_conditions. Specific routes can examined inspecting route attributes using ors_inspect.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_pairwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Routing distance computations — ors_pairwise","text":"","code":"if (FALSE) { data(\"pharma\")  set.seed(123) dest <- ors_sample(10)  car <- \"driving-car\" bike <- \"cycling-regular\"  # Running with sf objects route_lengths_sf <- ors_pairwise(pharma, dest, profile = car) route_lengths_sf  # Running with coordinate pairs route_lengths_df <- ors_pairwise(pharma, dest, profile = bike) route_lengths_df  # Returns route geometries route_lengths_geom <- ors_pairwise(   pharma,   dest,   profile = car,   geometry = TRUE )  # Returns routes in kilometers route_lengths_km <- ors_pairwise(   pharma,   dest,   profile = bike,   units = \"km\" )  # Running with additional arguments route_lengths_opts <- ors_pairwise(   pharma,   dest,   profile = car,   continue_straight = TRUE,   preference = \"fastest\" )  # Finding shortest routes from each point in sample_a to sample_b shortest_routes <- ors_shortest_distances(pharma, dest, units = \"km\") shortest_routes  # Pre-filter the nearest 5 destination points by Euclidian distance pois <- get_closest_pois(pharma, dest, n = 5)  # Only route from each pharmacy to one of the closest 5 destination points # respectively. For larger datasets, this can increase performance. nearest_hospitals <- ors_shortest_distances(   pharma,   pois,   group = \".group\",   geometry = TRUE ) nearest_hospitals } if (FALSE) {  }"},{"path":"https://jslth.github.io/rors/reference/ors_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"ORS profile — ors_profile","title":"ORS profile — ors_profile","text":"Construct configuration ORS profile. ors_profile object created function can used input $add_profiles() method ORS instances.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS profile — ors_profile","text":"","code":"ors_profile(name = NULL, ..., template = TRUE)"},{"path":"https://jslth.github.io/rors/reference/ors_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS profile — ors_profile","text":"name [character] Name ORS profile. length-2 vector passed, first value taken actual name second value taken title profile configuration file (e.g. c(\"driving-car\", \"car\")). ... Configuration parameters ORS profile. Must key-value pairs. details, refer configuration reference. template logical Whether use template name one base profiles (see details).","code":""},{"path":"https://jslth.github.io/rors/reference/ors_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ORS profile — ors_profile","text":"object class ors_profile can used add profiles ors_instance","code":""},{"path":"https://jslth.github.io/rors/reference/ors_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ORS profile — ors_profile","text":"ORS defines number base profiles including: driving-car driving-hgv cycling-regular cycling-road cycling-electric cycling-mountain foot-walking foot-hiking wheelchair public-transport base profiles pre-defined template. Profiles base profiles can also constructed ors_profile, need sophisticated preparation (see e.g. Butzer 2017).","code":""},{"path":"https://jslth.github.io/rors/reference/ors_profile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ORS profile — ors_profile","text":"Butzer, .S. (2017). Erstellung eines Routing-Profils für Feuerwehrfahrzeuge auf Basis von OpenStreetMap-Daten. Bachelor Thesis. Ruprecht Karl University Heidelberg.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ORS profile — ors_profile","text":"","code":"# Create a car profile with pre-defined defaults ors_profile(\"driving-car\") #> <ors_profile> #>  car: #>   profile: driving-car #>   enabled: true #>   encoder_options: #>     turn_costs: true #>     block_fords: false #>     use_acceleration: true #>     maximum_grade_level: 1 #>     conditional_access: true #>     conditional_speed: true #>   elevation: true #>   preparation: #>     min_network_size: 200 #>     min_one_way_network_size: 200 #>     methods: #>       ch: #>         enabled: true #>         threads: 1 #>         weightings: fastest #>       lm: #>         enabled: false #>         threads: 1 #>         weightings: fastest #>         landmarks: 16 #>       core: #>         enabled: true #>         threads: 1 #>         weightings: fastest,shortest #>         landmarks: 64 #>   execution: #>     methods: #>       lm: #>         active_landmarks: 8 #>       core: #>         disabling_allowed: true #>         active_landmarks: 6  # Defaults can be modified ors_profile(\"driving-car\", elevation = FALSE) #> <ors_profile> #>  car: #>   profile: driving-car #>   enabled: true #>   encoder_options: #>     turn_costs: true #>     block_fords: false #>     use_acceleration: true #>     maximum_grade_level: 1 #>     conditional_access: true #>     conditional_speed: true #>   elevation: false #>   preparation: #>     min_network_size: 200 #>     min_one_way_network_size: 200 #>     methods: #>       ch: #>         enabled: true #>         threads: 1 #>         weightings: fastest #>       lm: #>         enabled: false #>         threads: 1 #>         weightings: fastest #>         landmarks: 16 #>       core: #>         enabled: true #>         threads: 1 #>         weightings: fastest,shortest #>         landmarks: 64 #>   execution: #>     methods: #>       lm: #>         active_landmarks: 8 #>       core: #>         disabling_allowed: true #>         active_landmarks: 6  # Create a walking profile with given encoder options ors_profile(\"bike-regular\", template = FALSE, encoder_options = list(turn_costs = FALSE)) #> <ors_profile> #>  bike-regular: #>   profile: cycling-regular #>   enabled: true #>   encoder_options: #>     turn_costs: false"},{"path":"https://jslth.github.io/rors/reference/ors_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"ORS-based sampling — ors_sample","title":"ORS-based sampling — ors_sample","text":"Sample point geometries within boundaries running ORS extract. mounted instance local, running ORS extract identified. case, random bounding box generated. See get_extract_boundaries details.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ORS-based sampling — ors_sample","text":"","code":"ors_sample(   size,   ...,   force_new_extract = FALSE,   instance = NULL,   poly = NULL,   verbose = TRUE )"},{"path":"https://jslth.github.io/rors/reference/ors_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORS-based sampling — ors_sample","text":"size [integer] Number points sampled. ... Passed st_sample. force_new_extract [logical] TRUE, forces cached extract geometries overwritten. Defaults FALSE increase speed. Set TRUE extract changed new one needs loaded. instance [ors_instance] Object OpenRouteService instance used route computations. recommended use ors_instance set instance globally. argument used activating instance globally feasible. poly [sf/sfc] Boundary polygon used sample points. NULL, default, boundary polygons extracted current instance set ors_instance. verbose [logical] TRUE, prints loading spinner.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ORS-based sampling — ors_sample","text":"sfc object containing sampled POINT geometries","code":""},{"path":"https://jslth.github.io/rors/reference/ors_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ORS-based sampling — ors_sample","text":"function vectortranslates extract file sf object. Depending file, can take . unionized boundaries cached making subsequent function calls lot faster.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_snap.html","id":null,"dir":"Reference","previous_headings":"","what":"Snap to nearest street — ors_snap","title":"Snap to nearest street — ors_snap","text":"Queries snap endpoint snap source points nearest accessible street. function work public API.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_snap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snap to nearest street — ors_snap","text":"","code":"ors_snap(src, profile = get_profiles(), radius = 350, instance = NULL, ...)"},{"path":"https://jslth.github.io/rors/reference/ors_snap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Snap to nearest street — ors_snap","text":"src [sf/sfc] Source dataset containing point geometries routed . profile [character] Means transport supported OpenRouteService. Defaults first profile call get_profiles. ors_shortest_distances, profile can character vector, functions needs character scalar. details profiles, refer documentation. radius [numeric] Snapping radius. Points snapped street street lies within distance source point. instance [ors_instance] Object OpenRouteService instance used route computations. recommended use ors_instance set instance globally. argument used activating instance globally feasible. ... Additional arguments passed snap API.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_snap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Snap to nearest street — ors_snap","text":"dataframe containing snapped geometries point src together name street snapping distance.","code":""},{"path":"https://jslth.github.io/rors/reference/ors_snap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Snap to nearest street — ors_snap","text":"","code":"if (FALSE) { set.seed(123)  samp <- ors_sample(50) plot(samp, col = \"black\")  snap1 <- ors_snap(samp) plot(snap1, add = TRUE, col = \"red\")  snap2 <- ors_snap(samp, radius = 5000) plot(snap2, add = TRUE, col = \"blue\")  snap2 <- ors_snap(samp, profile = \"foot-walking\") plot(snap2, add = TRUE, col = \"green\") }"},{"path":"https://jslth.github.io/rors/reference/pharma.html","id":null,"dir":"Reference","previous_headings":"","what":"Pharmacies in Rutland — pharma","title":"Pharmacies in Rutland — pharma","text":"OpenStreetMap dataset pharmacies British county Rutland.","code":""},{"path":"https://jslth.github.io/rors/reference/pharma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pharmacies in Rutland — pharma","text":"","code":"pharma"},{"path":"https://jslth.github.io/rors/reference/pharma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pharmacies in Rutland — pharma","text":"sf tibble 8 rows 3 columns: name Name pharmacy dispensing Whether pharmacy able provide prescription drugs geometry sfc geometries","code":""},{"path":"https://jslth.github.io/rors/reference/pharma.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pharmacies in Rutland — pharma","text":"https://www.openstreetmap.org/, https://overpass-turbo.eu/","code":""},{"path":"https://jslth.github.io/rors/reference/plot_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot route cross-sections — plot_section","title":"Plot route cross-sections — plot_section","text":"Plot segments route elevation profile cross-section. geographic cross-section describes two-dimensional cut route x-axis denotes distance y-axis denotes elevation. area elevation profile can used plot additional feature.","code":""},{"path":"https://jslth.github.io/rors/reference/plot_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot route cross-sections — plot_section","text":"","code":"plot_section(   x,   feat = \"avgspeed\",   dist = \"distance\",   elev = \"elevation\",   palette = NULL,   scale_elevation = TRUE,   size = 1.5,   xlab = dist,   ylab = elev,   scale_title = feat,   title = NULL,   subtitle = NULL,   caption = NULL,   ... )"},{"path":"https://jslth.github.io/rors/reference/plot_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot route cross-sections — plot_section","text":"x [sf] sf data.frame describing segments linestring. data.frame expected multiple rows (representing segments) least three columns, \"elevation\", \"distance\" additional feature. Preferably, result ors_inspect, sf data.frames might work well. dist, elev, feat [character] Column names distance, elevation feature values inside x. palette [character] Color palette used plotting. Passed scale_fill_manual scale_fill_gradientn, depending data type feat. Defaults Cividis colormap. scale_elevation [logical] Whether scale elevation axis based lowest elevation. FALSE, y-axis scaled fixed sea level. Defaults TRUE. size [numeric] Size line plot. Defaults 1.5. xlab, ylab, scale_title, title, subtitle, caption [character] Arguments change label names, legend, title, subtitle caption ggplot object. ... arguments passed scale_fill_manual scale_fill_gradientn depending data type feat.","code":""},{"path":"https://jslth.github.io/rors/reference/plot_section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot route cross-sections — plot_section","text":"ggplot object.","code":""},{"path":"https://jslth.github.io/rors/reference/plot_section.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot route cross-sections — plot_section","text":"https://giscience.github.io/openrouteservice-r/articles/openrouteservice.html","code":""},{"path":"https://jslth.github.io/rors/reference/plot_section.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot route cross-sections — plot_section","text":"","code":"if (FALSE) { sample <- ors_sample(2) route <- ors_inspect(sample[1, ], sample[2, ], extra_info = TRUE)  plot_section(route, feat = \"waytype\")  plot_section(route, feat = \"steepness\", scale_elevation = FALSE)  zissou_pal <- hcl.colors(11, palette = \"Zissou 1\") plot_section(route, \"steepness\", palette = zissou_pal)  terrain_pal <- hcl.colors(10, palette = \"Terrain\") plot_section(route, \"elevation\", palette = terrain_pal, scale_elevation = FALSE) }"},{"path":"https://jslth.github.io/rors/reference/rors-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rors: Routing using OpenRouteService — rors-package","title":"rors: Routing using OpenRouteService — rors-package","text":"Flexible opinionated interface local remote OpenRouteService instances. package enables qualitative quantitative route computations, accessbility analyses, distance matrix calculations, street snapping graph network exports. primarily aimed processing larger datasets controlled server-side limitations. R6 classes support setup management custom OpenRouteService instances. package functions take tidy graceful approach querying formatting API output.","code":""},{"path":"https://jslth.github.io/rors/reference/rors-package.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rors: Routing using OpenRouteService — rors-package","text":"learn usage package, look two vignettes package:","code":"vignette(\"ors-installation\", package = \"rors\") vignette(\"ors-routing\", package = \"rors\")"},{"path":"https://jslth.github.io/rors/reference/rors-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rors: Routing using OpenRouteService — rors-package","text":"package powered OpenRouteService. problems concerning service, refer https://github.com/GIScience/openrouteservice © openrouteservice.org HeiGIT | Map data © OpenStreetMap contributors","code":""},{"path":[]},{"path":"https://jslth.github.io/rors/reference/rors-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rors: Routing using OpenRouteService — rors-package","text":"Maintainer: Lieth Jonas jonas.lieth@gesis.org","code":""}]

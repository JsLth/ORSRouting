% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ORSDockerInterface2.R
\name{ors_change}
\alias{ors_change}
\title{Make changes to ORS setup}
\usage{
ors_change(instance, ..., wait = TRUE)
}
\arguments{
\item{instance}{ORS instance object created by
\code{\link[ORSRouting]{ors_instance}}.}

\item{...}{Arguments passed to \code{\link[ORSRouting]{ors_config}},
\code{\link[ORSRouting]{ors_settings}} and \code{\link[ORSRouting]{ors_extract}}.}

\item{wait}{Logical. If \code{TRUE}, the function will not stop running
after the container is being started and will give out a notification as
soon as the service is ready. If \code{FALSE}, the function will start
the container and then stop. To check the server status, you can then
call \code{\link{ors_ready}}.}
}
\value{
Nested list of class \code{ors_constructor}.
}
\description{
Change the configuration, compose or extract of a running
OpenRouteService instance. This is a simple convenience function that
automates stopping, making changes and restarting the container. To be in
full control of this process, take a look at the other setup functions.
}
\seealso{
Other ORS setup functions: 
\code{\link{ors_config}()},
\code{\link{ors_down}()},
\code{\link{ors_extract}()},
\code{\link{ors_instance}()},
\code{\link{ors_remove}()},
\code{\link{ors_settings}()},
\code{\link{ors_start}()},
\code{\link{ors_stop}()},
\code{\link{ors_up}()}
}
\concept{ORS setup functions}

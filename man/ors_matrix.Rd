% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/route-distances.R
\name{ors_matrix}
\alias{ors_matrix}
\title{Routing distance matrix}
\usage{
ors_matrix(
  source,
  destination,
  profile = get_profiles(),
  units = c("m", "km", "mi"),
  proximity_type = c("distance", "duration")
)
}
\arguments{
\item{source}{\code{[various]}

Source dataset that represents points that should be routed from. It can be
passed as:
\itemize{
\item An \code{sf}/\code{sfc} object containing point geometries.
\item Any two-dimensional base data structure, e.g. dataframes
\item A nested list
}
Each row represents a \code{lon/lat} coordinate pair. The coordinate
reference system for the source data is expected to be \code{EPSG:4326}. If
an object with \code{length > 2} is passed (not \code{sf}/\code{sfc}), it
will be tried to heuristically determine the columns containing coordinates.}

\item{destination}{\code{[various]}

Destination dataset that represents point coordinates that are to be routed
to. The destination dataset follows the same format requirements as the
source dataset.}

\item{profile}{\code{[character]}

Character vector. Means of transport as supported by OpenRouteService. For a
list of active profiles, call \code{\link{get_profiles}}. For details on all
profiles, refer to the
\href{https://giscience.github.io/openrouteservice/documentation/Tag-Filtering.html}{documentation}.}

\item{units}{\code{[character]}

Distance unit for distance calculations (\code{"m"}, \code{"km"} or
\code{"mi"})}

\item{proximity_type}{\code{[character]}

Type of proximity that the calculations should be
based on. If \code{distance}, the shortest physical distance will be calculated
and if \code{duration}, the shortest temporal distance will be calculated.}
}
\value{
If \code{length(proximity_type) == 1}, returns a
\code{nrow(source) * nrow(destination)} routing distance matrix. Otherwise,
returns a list containing two matrices accordingly.
}
\description{
Calls the matrix service and returns a routing distance matrix.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pois.R
\name{get_nearest_pois}
\alias{get_nearest_pois}
\title{Returns points of interest in the proximity of the source dataset. Unlike \code{get_osm_pois},
this function requires a local dataset of points of interest.}
\usage{
get_nearest_pois(
  source,
  pois,
  number_of_points = NULL,
  radius = NULL,
  pois_crs = NULL
)
}
\arguments{
\item{source}{Source dataset that represents point coordinates that are to be routed
from. The source dataset should be passed as a dataframe or plain nested list with
each row representing a x/y or lon/lat coordinate pair.}

\item{pois}{Dataset that represents a list of points of interest to be routed to
for each coordinate pair in the source dataset. The POI dataset can either be passed as a
dataframe or plain nested list with each row representing a x/y or lon/lat coordinate pair,
or, alternatively, as a simple features object. If radius is not \code{NULL}, the POI dataset
will be converted to an sf object if it is not already.}

\item{number_of_points}{Integer scalar. Number of points to be returned.}

\item{radius}{Numeric scalar. Buffer radius that will select points of interest that fall
within it.}

\item{pois_crs}{Any object that is recognized by \code{sf::st_crs}. Coordinate reference system
to determine the coordinate notation of the \code{source} and \code{pois} dataset. It is assumed that
both datasets share the same CRS.}
}
\value{
List of dataframes with each dataframe containing all points of interest
in a given type of proximity to the respective source point.
}
\description{
Returns points of interest in the proximity of the source dataset. Unlike \code{get_osm_pois},
this function requires a local dataset of points of interest.
}
\details{
The proximity can either be defined by the number of points to be selected, by a
distance buffer or by both. If both measures are defined, the function will select points
of interest within a certain radius first and will then select a given number of points
within that radius. The proximity type can be controlled by either passing or not passing
a value to \code{number_of_points} and \code{radius}.
}
\examples{
get_nearest_pois(datensatz.a, osm_pois, 3, NULL)
[[1]]
         X        Y
1 6.924774 50.99160
2 6.975410 51.03098
3 6.960451 50.98735

[[2]]
         X        Y
1 7.016889 50.91035
 2 7.042753 50.89777
3 6.966869 50.91035

...
}
